RUS_civil_war_decisions = {
	
	RCW_rrf_front = {
		icon = generic_prepare_civil_war
		allowed = {
			OR = {
				tag = SOV
				tag = RUS
				tag = RVA
				tag = WRA
				tag = TRM
			}
		}
		available = {
			NOT = {
				has_idea = RCW_republican_front_idea
				has_idea = RCW_rrf_front_idea
				has_idea = RCW_western_front_idea
				has_idea = RCW_soviet_front_idea
				has_idea = RCW_volunteer_front_idea
				has_idea = RCW_transamur_front_idea
			}
		}
		visible = {
			has_global_flag = RCW_begun
			NOT = { has_global_flag = RCW_over }
			has_war_with = RRF
		}

		days_re_enable = 180
		fire_only_once = no

		custom_cost_trigger = {
			command_power > 25
			has_political_power > 25
		}
		custom_cost_text = CP_25_PP_25

		ai_will_do = {
			factor = 200
			modifier = {
				factor = 0
				NOT = {
					any_controlled_state = {
						any_neighbor_state = {
							is_controlled_by = RRF
						}
					}
				}
			}
			modifier = {
				factor = 2
				any_owned_state = {
					is_core_of = ROOT
					is_controlled_by = RRF
				}
			}
			modifier = {
				factor = 2
				set_temp_variable = { rrf_cont = 0 }
				add_to_temp_variable = { rrf_cont = RRF.num_of_controlled_states }
				set_temp_variable = { sov_cont = 0 }
				add_to_temp_variable = { sov_cont = SOV.num_of_controlled_states }
				set_temp_variable = { rva_cont = 0 }
				add_to_temp_variable = { rva_cont = RVA.num_of_controlled_states }
				set_temp_variable = { wra_cont = 0 }
				add_to_temp_variable = { wra_cont = WRA.num_of_controlled_states }
				set_temp_variable = { rus_cont = 0 }
				add_to_temp_variable = { rus_cont = RUS.num_of_controlled_states }
				set_temp_variable = { trm_cont = 0 }
				add_to_temp_variable = { trm_cont = TRM.num_of_controlled_states }
				check_variable = { rrf_cont > trm_cont }
				check_variable = { rrf_cont > rus_cont }
				check_variable = { rrf_cont > sov_cont }
				check_variable = { rrf_cont > rva_cont }
				check_variable = { rrf_cont > wra_cont }
			}
			modifier = {
				factor = 0.25
				set_temp_variable = { global.num = 0 }
				all_of = {
					array = controlled_states
					var:v = {
						if = {
							limit = { any_neighbor_state = { is_controlled_by = RRF } }
							add_to_temp_variable = { global.num = 1 }
						}
					}
				}
				check_variable = { global.num < 3 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision RCW_rrf_front"
			hidden_effect = {
				add_command_power = -25
				add_political_power = -25
			}
			add_timed_idea = {
				idea = RCW_rrf_front_idea
				days = 90
			}
		}
	}
	RCW_western_front = {
		icon = generic_prepare_civil_war
		allowed = {
			OR = {
				tag = SOV
				tag = RUS
				tag = RVA
				tag = RRF
				tag = TRM
			}
		}
		available = {
			NOT = {
				has_idea = RCW_republican_front_idea
				has_idea = RCW_rrf_front_idea
				has_idea = RCW_western_front_idea
				has_idea = RCW_soviet_front_idea
				has_idea = RCW_volunteer_front_idea
				has_idea = RCW_transamur_front_idea
			}
		}
		visible = {
			has_global_flag = RCW_begun
			NOT = { has_global_flag = RCW_over }
			has_war_with = WRA
		}

		days_re_enable = 180
		fire_only_once = no

		custom_cost_trigger = {
			command_power > 25
			has_political_power > 25
		}
		custom_cost_text = CP_25_PP_25

		ai_will_do = {
			factor = 200
			modifier = {
				factor = 0
				NOT = {
					any_controlled_state = {
						any_neighbor_state = {
							is_controlled_by = WRA
						}
					}
				}
			}
			modifier = {
				factor = 2
				any_owned_state = {
					is_core_of = ROOT
					is_controlled_by = WRA
				}
			}
			modifier = {
				factor = 2
				set_temp_variable = { rrf_cont = 0 }
				add_to_temp_variable = { rrf_cont = RRF.num_of_controlled_states }
				set_temp_variable = { sov_cont = 0 }
				add_to_temp_variable = { sov_cont = SOV.num_of_controlled_states }
				set_temp_variable = { rva_cont = 0 }
				add_to_temp_variable = { rva_cont = RVA.num_of_controlled_states }
				set_temp_variable = { wra_cont = 0 }
				add_to_temp_variable = { wra_cont = WRA.num_of_controlled_states }
				set_temp_variable = { rus_cont = 0 }
				add_to_temp_variable = { rus_cont = RUS.num_of_controlled_states }
				set_temp_variable = { trm_cont = 0 }
				add_to_temp_variable = { trm_cont = TRM.num_of_controlled_states }
				check_variable = { wra_cont > trm_cont }
				check_variable = { wra_cont > rus_cont }
				check_variable = { wra_cont > sov_cont }
				check_variable = { wra_cont > rva_cont }
				check_variable = { wra_cont > rrf_cont }
			}
			modifier = {
				factor = 0.25
				set_temp_variable = { global.num = 0 }
				all_of = {
					array = controlled_states
					var:v = {
						if = {
							limit = { any_neighbor_state = { is_controlled_by = WRA } }
							add_to_temp_variable = { global.num = 1 }
						}
					}
				}
				check_variable = { global.num < 3 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision RCW_western_front"
			hidden_effect = {
				add_command_power = -25
				add_political_power = -25
			}
			add_timed_idea = {
				idea = RCW_western_front_idea
				days = 90
			}
		}
	}
	RCW_soviet_front = {
		icon = generic_prepare_civil_war
		allowed = {
			OR = {
				tag = WRA
				tag = RUS
				tag = RVA
				tag = RRF
				tag = TRM
			}
		}
		available = {
			NOT = {
				has_idea = RCW_republican_front_idea
				has_idea = RCW_rrf_front_idea
				has_idea = RCW_western_front_idea
				has_idea = RCW_soviet_front_idea
				has_idea = RCW_volunteer_front_idea
				has_idea = RCW_transamur_front_idea
			}
		}
		visible = {
			has_global_flag = RCW_begun
			NOT = { has_global_flag = RCW_over }
			has_war_with = SOV
		}

		days_re_enable = 180
		fire_only_once = no

		custom_cost_trigger = {
			command_power > 25
			has_political_power > 25
		}
		custom_cost_text = CP_25_PP_25

		ai_will_do = {
			factor = 200
			modifier = {
				factor = 0
				NOT = {
					any_controlled_state = {
						any_neighbor_state = {
							is_controlled_by = SOV
						}
					}
				}
			}
			modifier = {
				factor = 2
				any_owned_state = {
					is_core_of = ROOT
					is_controlled_by = SOV
				}
			}
			modifier = {
				factor = 2
				set_temp_variable = { rrf_cont = 0 }
				add_to_temp_variable = { rrf_cont = RRF.num_of_controlled_states }
				set_temp_variable = { sov_cont = 0 }
				add_to_temp_variable = { sov_cont = SOV.num_of_controlled_states }
				set_temp_variable = { rva_cont = 0 }
				add_to_temp_variable = { rva_cont = RVA.num_of_controlled_states }
				set_temp_variable = { wra_cont = 0 }
				add_to_temp_variable = { wra_cont = WRA.num_of_controlled_states }
				set_temp_variable = { rus_cont = 0 }
				add_to_temp_variable = { rus_cont = RUS.num_of_controlled_states }
				set_temp_variable = { trm_cont = 0 }
				add_to_temp_variable = { trm_cont = TRM.num_of_controlled_states }
				check_variable = { sov_cont > trm_cont }
				check_variable = { sov_cont > rus_cont }
				check_variable = { sov_cont > wra_cont }
				check_variable = { sov_cont > rva_cont }
				check_variable = { sov_cont > rrf_cont }
			}
			modifier = {
				factor = 0.25
				set_temp_variable = { global.num = 0 }
				all_of = {
					array = controlled_states
					var:v = {
						if = {
							limit = { any_neighbor_state = { is_controlled_by = SOV } }
							add_to_temp_variable = { global.num = 1 }
						}
					}
				}
				check_variable = { global.num < 3 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision RCW_soviet_front"
			hidden_effect = {
				add_command_power = -25
				add_political_power = -25
			}
			add_timed_idea = {
				idea = RCW_soviet_front_idea
				days = 90
			}
		}
	}
	RCW_volunteer_front = {
		icon = generic_prepare_civil_war
		allowed = {
			OR = {
				tag = WRA
				tag = RUS
				tag = SOV
				tag = RRF
				tag = TRM
			}
		}
		available = {
			NOT = {
				has_idea = RCW_republican_front_idea
				has_idea = RCW_rrf_front_idea
				has_idea = RCW_western_front_idea
				has_idea = RCW_soviet_front_idea
				has_idea = RCW_volunteer_front_idea
				has_idea = RCW_transamur_front_idea
			}
		}
		visible = {
			has_global_flag = RCW_begun
			NOT = { has_global_flag = RCW_over }
			has_war_with = RVA
		}

		days_re_enable = 180
		fire_only_once = no

		custom_cost_trigger = {
			command_power > 25
			has_political_power > 25
		}
		custom_cost_text = CP_25_PP_25

		ai_will_do = {
			factor = 200
			modifier = {
				factor = 0
				NOT = {
					any_controlled_state = {
						any_neighbor_state = {
							is_controlled_by = RVA
						}
					}
				}
			}
			modifier = {
				factor = 2
				any_owned_state = {
					is_core_of = ROOT
					is_controlled_by = RVA
				}
			}
			modifier = {
				factor = 2
				set_temp_variable = { rrf_cont = 0 }
				add_to_temp_variable = { rrf_cont = RRF.num_of_controlled_states }
				set_temp_variable = { sov_cont = 0 }
				add_to_temp_variable = { sov_cont = SOV.num_of_controlled_states }
				set_temp_variable = { rva_cont = 0 }
				add_to_temp_variable = { rva_cont = RVA.num_of_controlled_states }
				set_temp_variable = { wra_cont = 0 }
				add_to_temp_variable = { wra_cont = WRA.num_of_controlled_states }
				set_temp_variable = { rus_cont = 0 }
				add_to_temp_variable = { rus_cont = RUS.num_of_controlled_states }
				set_temp_variable = { trm_cont = 0 }
				add_to_temp_variable = { trm_cont = TRM.num_of_controlled_states }
				check_variable = { rva_cont > trm_cont }
				check_variable = { rva_cont > rus_cont }
				check_variable = { rva_cont > wra_cont }
				check_variable = { rva_cont > sov_cont }
				check_variable = { rva_cont > rrf_cont }
			}
			modifier = {
				factor = 0.25
				set_temp_variable = { global.num = 0 }
				all_of = {
					array = controlled_states
					var:v = {
						if = {
							limit = { any_neighbor_state = { is_controlled_by = RVA } }
							add_to_temp_variable = { global.num = 1 }
						}
					}
				}
				check_variable = { global.num < 3 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision RCW_volunteer_front"
			hidden_effect = {
				add_command_power = -25
				add_political_power = -25
			}
			add_timed_idea = {
				idea = RCW_volunteer_front_idea
				days = 90
			}
		}
	}
	RCW_transamur_front = {
		icon = generic_prepare_civil_war
		allowed = {
			OR = {
				tag = WRA
				tag = RUS
				tag = SOV
				tag = RRF
				tag = RVA
			}
		}
		available = {
			NOT = {
				has_idea = RCW_republican_front_idea
				has_idea = RCW_rrf_front_idea
				has_idea = RCW_western_front_idea
				has_idea = RCW_soviet_front_idea
				has_idea = RCW_volunteer_front_idea
				has_idea = RCW_transamur_front_idea
			}
		}
		visible = {
			has_global_flag = RCW_begun
			NOT = { has_global_flag = RCW_over }
			has_war_with = TRM
		}

		days_re_enable = 180
		fire_only_once = no

		custom_cost_trigger = {
			command_power > 25
			has_political_power > 25
		}
		custom_cost_text = CP_25_PP_25

		ai_will_do = {
			factor = 200
			modifier = {
				factor = 0
				NOT = {
					any_controlled_state = {
						any_neighbor_state = {
							is_controlled_by = TRM
						}
					}
				}
			}
			modifier = {
				factor = 2
				any_owned_state = {
					is_core_of = ROOT
					is_controlled_by = TRM
				}
			}
			modifier = {
				factor = 2
				set_temp_variable = { rrf_cont = 0 }
				add_to_temp_variable = { rrf_cont = RRF.num_of_controlled_states }
				set_temp_variable = { sov_cont = 0 }
				add_to_temp_variable = { sov_cont = SOV.num_of_controlled_states }
				set_temp_variable = { rva_cont = 0 }
				add_to_temp_variable = { rva_cont = RVA.num_of_controlled_states }
				set_temp_variable = { wra_cont = 0 }
				add_to_temp_variable = { wra_cont = WRA.num_of_controlled_states }
				set_temp_variable = { rus_cont = 0 }
				add_to_temp_variable = { rus_cont = RUS.num_of_controlled_states }
				set_temp_variable = { trm_cont = 0 }
				add_to_temp_variable = { trm_cont = TRM.num_of_controlled_states }
				check_variable = { trm_cont > rva_cont }
				check_variable = { trm_cont > rus_cont }
				check_variable = { trm_cont > wra_cont }
				check_variable = { trm_cont > sov_cont }
				check_variable = { trm_cont > rrf_cont }
			}
			modifier = {
				factor = 0.25
				set_temp_variable = { global.num = 0 }
				all_of = {
					array = controlled_states
					var:v = {
						if = {
							limit = { any_neighbor_state = { is_controlled_by = TRM } }
							add_to_temp_variable = { global.num = 1 }
						}
					}
				}
				check_variable = { global.num < 3 }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision RCW_transamur_front"
			hidden_effect = {
				add_command_power = -25
				add_political_power = -25
			}
			add_timed_idea = {
				idea = RCW_transamur_front_idea
				days = 90
			}
		}
	}
	RCW_recruit_state = {
		icon = rus_flag
		allowed = {
			OR = {
				tag = TRM
				tag = SOV
				tag = WRA
				tag = RRF
				tag = RVA
				tag = RUS
			}
		}
		available = {
			NOT = {
				has_country_flag = RCW_is_recruiting
				FROM = { is_demilitarized_zone = yes }
			}
		}
		visible = {
			controls_state = FROM
			NOT = { FROM = { has_state_flag = RCW_recruited_@ROOT } }
			if = {
				limit = {
					tag = TRM
				}
				OR = {
					has_war_with = SOV
					has_war_with = WRA
					has_war_with = RUS
					has_war_with = RVA
					has_war_with = WRA
				}
			}
		}
		cancel_trigger = {
			OR = {
				NOT = { controls_state = FROM }
				has_global_flag = RCW_over
			}
		}
		
		fire_only_once = no
		days_remove = 6
		cost = 0
		on_map_mode = map_only 
		
		
		state_target = yes
		target_array = RUS.RUS_starting_states_array 
		target_trigger = {
			FROM = {
				is_controlled_by = ROOT
				NOT = { has_state_flag = RCW_recruited_@ROOT }
				impassable = no
				NOT = { has_state_category = zero }
				NOT = { has_state_category = one }
			}
			NOT = { has_global_flag = RCW_over }
			OR = {
				country_exists = RVA
				country_exists = RRF
				country_exists = SOV
				country_exists = WRA
				has_global_flag = RCW_begun
			}
		}
		highlight_states = {
			highlight_state_targets = {
				state = FROM
			}
		}
		
		
		cancel_trigger = {
			has_global_flag = RCW_begun
		}


		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				FROM = { is_core_of = ROOT }
			}
			modifier = {
				set_temp_variable = { units_to_spawn = FROM.state_population_k }
				divide_temp_variable = { units_to_spawn = 500 }
				round_temp_variable = units_to_spawn

				if = {
					limit = {
						NOT = { has_global_flag = KR_no_unit_limits }
						set_temp_variable = { unit_limit_factor = num_divisions }
						add_to_temp_variable = { unit_limit_factor = units_to_spawn }
						check_variable = { unit_limit_factor > max_divisions }
					}
					set_temp_variable = { units_to_spawn = 0 }
				}

				factor = units_to_spawn
			}			
		}
		cancel_effect = {
			clr_country_flag = RCW_is_recruiting
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision RCW_recruit_state"
			set_country_flag = RCW_is_recruiting
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove RCW_recruit_state"
			clr_country_flag = RCW_is_recruiting
			FROM = {
				set_state_flag = RCW_recruited_@ROOT
				RCW_spawn_militia_divisions = yes
			}
		}
	}
}
RUS_Siberian_Insurgency_decisions = {
	RUS_control_state = {
		icon = GFX_decision_oppression
		
		visible = {
			FROM = {
				is_demilitarized_zone = yes
				is_owned_by = ROOT
			}
		}
		available = {
			FROM = {
				any_neighbor_state = {
					is_demilitarized_zone = no
					is_owned_by = ROOT
				}
			}
			RUS_siberian_insurgency_can_control_state = yes
		}
		cost = 20
		days_remove = 5
		fire_only_once = yes
		state_target = yes
		targets = { 583 572 653 580 403 577 590 571 588 570 578 40 569 568 576 567 575 }
		target_root_trigger = {
			has_country_flag = RCW_should_deal_with_siberian_revolt
		}
		target_trigger = {
			FROM = {
				is_demilitarized_zone = yes
			}
		}
		
		
		ai_will_do = {
			factor = 1000
		}
		highlight_states = { 
			highlight_state_targets = {
				state = FROM 
			}
		}
		remove_effect = {
			FROM = {
				set_demilitarized_zone = no
				add_core_of = ROOT
				remove_core_of = SIB
				add_claim_by = SIB
				cancel_resistance = yes
				force_disable_resistance = { clear = yes }
			}
			if = {
				limit = {
					FROM = { state = 577 }
				}
				1201 = {
					set_demilitarized_zone = no
					add_core_of = ROOT
					remove_core_of = SIB
					add_claim_by = SIB
					cancel_resistance = yes
					force_disable_resistance = { clear = yes }
				}
			}
			if = {
				limit = {
					FROM = { state = 580 }
				}
				1200 = {
					set_demilitarized_zone = no
					add_core_of = ROOT
					remove_core_of = SIB
					add_claim_by = SIB
					cancel_resistance = yes
					force_disable_resistance = { clear = yes }
				}
			}
			if = {
				limit = {
					FROM = { state = 576 }
				}
				516 = {
					set_demilitarized_zone = no
					add_core_of = ROOT
					remove_core_of = SIB
					add_claim_by = SIB
					cancel_resistance = yes
					force_disable_resistance = { clear = yes }
				}
			}
			
			ROOT = {
				add_stability = -0.02
			}
		}
	}	
}
RUS_Tambov_Rebellion_decisions = {
	RUS_control_rrf_state = {
		icon = GFX_decision_revolt
		
		available = {
			FROM = {
				any_neighbor_state = {
					is_demilitarized_zone = no
					is_owned_by = ROOT
				}
			}
		}
		visible = {
			FROM = {
				is_demilitarized_zone = yes
				is_owned_by = ROOT
			}
		}
		custom_cost_trigger = {
			command_power > 4
			has_political_power > 14
		}
		custom_cost_text = CP_5_PP_15
		
		days_remove = 5
		fire_only_once = yes
		
		state_target = yes
		targets = { 257 258 254 223 205 224 220 222 240 260 1229 821 }
		target_root_trigger = {
			has_country_flag = RCW_should_deal_with_rrf_revolt
		}
		target_trigger = {
			FROM = {
				is_demilitarized_zone = yes
			}
		}
		
		ai_will_do = {
			factor = 1000
		}
		highlight_states = { 
			highlight_state_targets = {
				state = FROM
			}
		}
		complete_effect = {
			ROOT = {
				add_political_power = -15
				add_command_power = -5
			}
		}
		remove_effect = {
			FROM = {
				set_demilitarized_zone = no
				add_core_of = ROOT
				remove_core_of = RRF
				cancel_resistance = yes
				force_disable_resistance = { clear = yes }
			}
			ROOT = {
				add_stability = -0.02
			}
		}
	}	
}